# c++ build
#

parameters:
  docker_cpp_build_version: &docker_cpp_build_version sixthview/build:1.2.13

defaults: &defaults
  docker:
    - image: *docker_cpp_build_version
      auth:
        username: sixthview
        password: $DOCKERHUB_PASSWORD
  working_directory: /app

machinedefaults: &machinedefaults
  machine:
    enabled: true
  working_directory: ~/repo

nodejsfaults: &nodejsfaults
  docker:
    - image: circleci/node:11.2.0
  working_directory: ~/repo

version: 2.0

jobs:

  buildNODEJSAPI:
    <<: *nodejsfaults
    steps:
      - checkout
      - run:
        name: Git LFS install
        command: |
          curl -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh | sudo bash && sudo apt-get install git-lfs && git lfs install
      - run:
        name: Pull Git Large Files
        command: |
          git lfs pull
      - restore_cache:
          keys:
            - v2-dependencies-{{ checksum "restful-api/package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v2-dependencies-
      - run: >
          cd restful-api && npm install
      - save_cache:
          paths:
            - restful-api/node_modules
          key: v2-dependencies-{{ checksum "restful-api/package.json" }}
#      - run: >
#          cd restful-api && npm test
      - restore_cache:
          keys:
            - v2-dependencies-{{ checksum "portal/package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v2-dependencies-
      - run: >
          cd portal && npm install
      - save_cache:
          paths:
            - portal/node_modules
          key: v2-dependencies-{{ checksum "portal/package.json" }}
#      - run: >
#          cd portal && npm test
      - run: >
          cd portal && npm run build
      - run: >
          tar -zcvf portal_static.gz ./portal/build
      - persist_to_workspace:
          root: .
          paths:
              - ./portal_static.gz

  deployNODEJSAPI:
    <<: *machinedefaults
    steps:
      - attach_workspace:
          at: ~/repo

#       - run: *s3utils
      - run:
          name: SSH to DigitalOcean and run api node.js server dockerized
          command: |
            ssh -oStrictHostKeyChecking=no -v $DROPLET_USER@$DROPLET_IP '(git clone git@github.com:49View/event_horizon.git 2> /dev/null || (cd event_horizon; git lfs pull)); sudo docker kill $(docker ps --filter "ancestor=eventhorizon-api" -q); sudo docker build -t eventhorizon-api ./event_horizon/restful-api;sudo docker run -p:3000:3000 -d eventhorizon-api'
      - run:
          name: Deploy Portal to nginx as static webpage
          command: |
            scp portal_static.gz $DROPLET_USER@$DROPLET_IP:/home/circleci/
            ssh -oStrictHostKeyChecking=no -v $DROPLET_USER@$DROPLET_IP 'sudo tar -xvzf portal_static.gz;
            cd portal/build;
            sudo rm -rf /usr/share/nginx/html/editor;
            sudo mkdir /usr/share/nginx/html/editor;
            sudo cp -rf * /usr/share/nginx/html/editor'

  buildCPP:
    <<: *defaults
    steps:
      - checkout
      - run: *s3utilsbuild
      - run: mkdir builds

      # Substance daemon
      - run:
          name: SubstanceDaemon cmake
          command: |
            mkdir builds/sat && cd builds/sat/ && cmake -DUSE_LOCALHOST=FALSE -DCMAKE_BUILD_TYPE=Release -DBUILD_FROM_SOURCE=TRUE ../../daemons/substance_daemon/
      - run:
          name: SubstanceDaemon make
          command: |
            make -j8 -C 'builds/sat/'
      - run:
          name: Store daemon artifact
          command: |
            cd /app/builds/sat/ && s3-artifacts.sh PUT substance_daemon

  deployCPP:
    <<: *machinedefaults
    steps:
      - run: *s3utils
      - run:
          name: Deploy Substance daemon
          command: |
            s3-artifacts.sh GET substance_daemon
            s3-artifacts.sh GET FBX2glTF
            scp substance_daemon $DROPLET_USER@$DROPLET_IP:/home/circleci/
            ssh -oStrictHostKeyChecking=no -v $DROPLET_USER@$DROPLET_IP 'sudo mkdir sat;
            sudo mv substance_daemon sat/;
            sudo mv FBX2glTF sat/;
            cd sat; echo -e "FROM sixthview/build:1.2.13\nADD substance_daemon /\nADD FBX2glTF /\nCMD [\"./substance_daemon\" ] " | sudo tee dockerfile;
            sudo chmod u+x substance_daemon;
            sudo chmod u+x FBX2glTF;
            sudo docker kill $(docker ps --filter "ancestor=sat" -q);
            sudo docker build -t sat .;
            sudo docker run -d sat'

workflows:
  version: 2
  build-deploy:
    jobs:
      - buildNODEJSAPI
#      - buildCPP:
#          filters:
#            branches:
#              only: master
      - deployNODEJSAPI:
          requires:
            - buildNODEJSAPI
          filters:
            branches:
              only: master
#      - deployCPP:
#          requires:
#            - buildCPP

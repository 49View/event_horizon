# c++ build
#

parameters:
  docker_cpp_build_version: &docker_cpp_build_version sixthview/build:1.1.0

defaults: &defaults
  docker:
    - image: *docker_cpp_build_version
      auth:
        username: sixthview
        password: $DOCKERHUB_PASSWORD
  working_directory: /app

version: 2.0

jobs:
  buildNODEJSAPI:
    docker:
      - image: circleci/node:10.3.0
    working_directory: ~/repo
    steps:
      - checkout
      # Download and cache dependencies
      - restore_cache:
          keys:
            - v2-dependencies-{{ checksum "node-api-server/package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v2-dependencies-
      - run: >
          cd node-api-server && npm install
      - save_cache:
          paths:
            - node-api-server/node_modules
          key: v2-dependencies-{{ checksum "node-api-server/package.json" }}
      # run tests!
      - run: >
          cd node-api-server && npm test
      # - persist_to_workspace:
      #     root: /app
      #     paths:
      #       - target/*
  deployNODEJSAPI:
    working_directory: ~/repo
    machine:
      enabled: true
    steps:
      - run:
          name: Deploy to Digital Ocean
          command: |
            ssh -oStrictHostKeyChecking=no -v $DROPLET_USER@$DROPLET_IP ./deploy.sh

  buildCPP:
    <<: *defaults
    steps:
      - checkout
      - run: mkdir builds

      # event_horizon_em
      - run: >
          source /3rdpartylibs/emsdk/emsdk_env.sh && mkdir builds/event_horizon_em && cd builds/event_horizon_em/ &&
          cmake -DCMAKE_BUILD_TYPE=Release
          -DCMAKE_TOOLCHAIN_FILE=/3rdpartylibs/emsdk/emscripten/1.38.12/cmake/Modules/Platform/Emscripten.cmake
          ../../event_horizon/
      - run: make -j8 -C 'builds/event_horizon_em/'
      - run: make install -C 'builds/event_horizon_em/'

      # event_horizon
      - run: >
          mkdir builds/event_horizon && cd builds/event_horizon/ &&
          cmake -DCMAKE_BUILD_TYPE=Release
          ../../event_horizon/
      - run: make -j8 -C 'builds/event_horizon/'
      - run: make install -C 'builds/event_horizon/'

      # Substance daemon
      - run: >
          mkdir builds/sat && cd builds/sat/ && cmake -DCMAKE_BUILD_TYPE=Release ../../daemons/substance_daemon/
      - run: make -j8 -C 'builds/sat/'
      - run: |
          curl --data-binary @/app/builds/sat/substance_deamon -H Content-Type:application/octet-stream https://49view-api.icu/fs/upload/artifacts%2Fsubstance_daemon

      # Editor
      - run: >
          mkdir builds/editor_em && cd builds/editor_em/ && cmake -DCMAKE_BUILD_TYPE=Release
          -DCMAKE_TOOLCHAIN_FILE=/3rdpartylibs/emsdk/emscripten/1.38.12/cmake/Modules/Platform/Emscripten.cmake
          ../../dev_tools/editor/
      - run: make -j8 -C 'builds/editor_em/'
      - run: |
          curl --data-binary @/app/builds/editor_em/editor.js -H Content-Type:application/octet-stream https://49view-api.icu/fs/upload/artifacts%2editor.js
      - run: |
          curl --data-binary @/app/builds/editor_em/editor.wasm -H Content-Type:application/octet-stream https://49view-api.icu/fs/upload/artifacts%2editor.wasm

      # run tests!

  deployCPP:
    machine:
      enabled: true
    steps:
      - run:
          name: Deploy Substance daemon
          command: |
            ssh -oStrictHostKeyChecking=no -v $DROPLET_USER@$DROPLET_IP ./deploy_substance_daemon.sh sixthview/build:1.1.0

  #      - attach_workspace:
#          # Must be absolute path or relative path from working_directory
#          at: /app/build

workflows:
  version: 2
  build-deploy:
    jobs:
      - buildNODEJSAPI
      - buildCPP:
          filters:
            branches:
              only: master
      - deployNODEJSAPI:
          requires:
            - buildNODEJSAPI
          filters:
            branches:
              only: master
      - deployCPP:
          requires:
            - buildCPP
{"version":3,"sources":["axios/backend.js","extra/wasmLoader.js","store/actions/auth.js","store/actions/actionsTypes.js","components/render/Render.js","extra/socketClientHandlerFactory.js","App.js","serviceWorker.js","store/utility.js","store/reducers/auth.js","index.js"],"names":["baseUrl","window","location","href","startsWith","instance","axios","create","baseURL","headers","Content-Type","Cache-Control","withCredentials","adapter","cacheAdapterEnhancer","defaults","projectName","wasmLoader","store","_this","this","Object","classCallCheck","loaderModule","wasmBinary","wasmScript","wasmBinaryUrl","concat","wasmScriptUrl","downloadWasm","asyncToGenerator","regenerator_default","a","mark","_callee","downloadConfig","binaryContent","content","wrap","_context","prev","next","url","method","responseType","sent","Uint8Array","data","t0","console","log","stop","instantiateWasm","_ref2","_callee2","canvas","s","_context2","Module","document","createElement","text","body","appendChild","_x","apply","arguments","print","printErr","onRuntimeInitialized","setTimeout","imports","successCallback","WebAssembly","instantiate","then","output","catch","e","createClass","key","value","result","getContext","ex","authSuccess","userInfo","isGuest","user","email","msToExpiration","expires","Date","getTime","type","checkCurrentUser","dispatch","get","response","err","password","project","authData","post","expirationDate","error","Render","state","isVisible","_this2","canvasClasses","classes","Canvas","props","visible","push","Hidden","react_default","ref","className","join","Component","socketClientHandlerFactory","socket","socketMessageHandler","message","parsedMessage","JSON","parse","msg","onSocketEventCallback","connect","host","SocketClientHandler","event","stringify","io","on","reason","send","jsonData","emit","App","onClickHandler","alert","onCheckCurrentUser","components_render_Render","withRouter","isAuthenticated","auth","token","actions","Boolean","hostname","match","updateObject","currentObject","updatedObject","objectSpread","initialState","loading","reducer","length","undefined","action","authStart","authFail","authLogout","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducers","combineReducers","authReducer","createStore","applyMiddleware","thunk","app","es","BrowserRouter","src_App_0","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6db19f23.chunk.js","sourcesContent":["import axios from 'axios';\nimport { cacheAdapterEnhancer } from 'axios-extensions';\n\nexport const baseUrl = (window.location.href.startsWith(\"https://localhost\")) ? 'https://localhost:3000' : 'https://api.ateventhorizon.com';\n\nconst instance=axios.create({\n    baseURL: baseUrl,\n    headers: {\n        'Content-Type': 'application/json',\n        'Cache-Control': 'no-cache'\n    },\n    withCredentials: true,\n    adapter: cacheAdapterEnhancer(axios.defaults.adapter)\n});\n\nexport default instance;","/* global WebAssembly */\nimport axios from \"../axios/backend\";\n\nconst projectName = \"editor\";\n\nexport class wasmLoader {\n\n    store = null;\n    loaderModule = null;\n    wasmBinary = null;\n    wasmScript = null;\n    wasmBinaryUrl = `/fs/artifacts%2F${projectName}.wasm`;\n    wasmScriptUrl = `/fs/artifacts%2F${projectName}.js`;\n\n    constructor(store)  {\n        this.store = store;\n\n        if (window.location.href.startsWith(\"https://localhost:5000\")) {\n            this.wasmBinaryUrl=`https://localhost:5000/${projectName}.wasm`;\n            this.wasmScriptUrl=`https://localhost:5000/${projectName}.js`;\n        } else if (window.location.href.startsWith(\"http://localhost:5000\")) {\n            this.wasmBinaryUrl=`http://localhost:5000/${projectName}.wasm`;\n            this.wasmScriptUrl=`http://localhost:5000/${projectName}.js`;\n        } \n        \n        console.log(window.location.href);\n\n        this.loaderModule = {\n            print: (text) => {\n                console.log(text);\n            },\n            printErr: (text) => {\n                console.log(\"ERROR: \"+text);\n            },\n            canvas: null,\n            onRuntimeInitialized: () => {\n                console.log(\"Runtime initialized\");\n                setTimeout(() => {\n                    // window.Module.addScriptLine(\"DISABLE KEYBOARD\");\n                    // window.Module.pauseMainLoop();\n                }, 3000);            },\n            instantiateWasm: (imports, successCallback) => {\n                WebAssembly.instantiate(window.wasmLoader.wasmBinary, imports).then(function(output) {\n                    console.log('wasm instantiation succeeded');\n                    successCallback(output.instance);\n                }).catch(function(e) {\n                    console.log('wasm instantiation failed! ' + e);\n                });\n                return {};\n            }\n        };\n    }\n\n    downloadWasm = async () => {\n        try {\n            let downloadConfig = {\n                url: this.wasmBinaryUrl,\n                method: \"get\",\n                responseType: \"arraybuffer\"\n            }\n\n            const binaryContent = await axios(downloadConfig);\n            this.wasmBinary=new Uint8Array(binaryContent.data);\n\n            downloadConfig = {\n                url: this.wasmScriptUrl,\n                method: \"get\",\n                responseType: \"text\"\n            }\n\n            const content = await axios(downloadConfig);\n            this.wasmScript= content.data;\n        } catch (ex) {\n            console.log(ex);\n            this.wasmBinary=null;\n            this.wasmScript=null;\n        }\n    }\n\n    instantiateWasm = async (canvas) => {\n\n        await this.downloadWasm();\n\n        this.loaderModule.canvas=canvas;\n        window.Module=this.loaderModule;\n\n        const s = document.createElement('script');                        \n        s.text = this.wasmScript;\n        document.body.appendChild(s);        \n    }\n\n    checkWasmSupport() {\n        return (typeof WebAssembly === 'object');\n    }\n\n    checkWebGL2Support() {\n        let canvas=document.createElement('canvas');\n        let result=false;\n        try {\n            if (canvas.getContext(\"webgl2\")!==null) {\n                result=true;\n            }\n        } catch (ex) {\n\n        }\n        return result;\n    }\n}\n\nexport default wasmLoader;","import axios from '../../axios/backend';\nimport * as actionTypes from './actionsTypes';\n\n\nconst guestUserEmail = \"guest@49view.com\";\n\nexport const authStart = () => {\n    return {\n        type: actionTypes.AUTH_START\n    };\n}\n\nexport const authSuccess = (userInfo) => {\n    let isGuest=false;\n    if (userInfo.user.email===guestUserEmail) {\n        isGuest=true;\n    }\n    let msToExpiration = userInfo.expires*1000-new Date().getTime();\n    console.log(\"Token expires in: \"+msToExpiration+\" ms\");\n    //dispatch(checkAuthTimeout(userInfo.expires));\n    return {\n        type: actionTypes.AUTH_SUCCESS,\n        isGuest: isGuest,\n        user: userInfo.user\n    }\n}\n\nexport const authFail = (error) => {\n    return {\n        type: actionTypes.AUTH_FAIL,\n        error: error\n    }\n}\n\nexport const logout = () => {\n    return {\n        type: actionTypes.AUTH_LOGOUT\n    }\n}\n\nexport const checkAuthTimeout = (expirationDate) => {\n    return dispatch => {\n\n    }\n}\n\nexport const auth = (email, password, project) => {\n    return dispatch => {\n        dispatch(authStart());\n        const authData = {\n            email: email,\n            password: password,\n            project: project\n        };\n        let url = '/getToken';\n        axios.post(url, authData)\n            .then(response => {\n                console.log(\"AUTH SUCCESS\");\n                console.log(response);\n                const expirationDate = new Date(response.data.expires);\n                console.log(\"EXPIRATION DATE: \"+expirationDate);\n                dispatch(authSuccess(response.data));\n                //dispatch(checkAuthTimeout(response.data.expires));\n            })\n            .catch(err =>{\n                dispatch(authFail(err.response.data.error));\n                console.log(\"AUTH FAIL\");\n            })\n    }\n}\n\nexport const setAuthRedirectPath = (path) => {\n    return {\n        type: actionTypes.SET_AUTH_REDIRECT_PATH,\n        path: path\n    }\n}\n\nexport const checkCurrentUser = () => {\n    return dispatch => {\n        console.log(\"CHECK CURRENT USER\");\n        let url = '/user';\n        axios.get(url)\n            .then(response => {\n                console.log(\"CHECK CURRENT USER SUCCESS\");\n                dispatch(authSuccess(response.data));\n            })\n            .catch(err =>{\n                console.log(\"CHECK CURRENT USER FAILED\");\n                dispatch(auth(guestUserEmail,'guest','49View'));\n            })\n    }\n}","export const AUTH_START = \"AUTH_START\";\nexport const AUTH_SUCCESS = \"AUTH_SUCCESS\";\nexport const AUTH_FAIL = \"AUTH_FAIL\";\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\n\nexport const SET_AUTH_REDIRECT_PATH = 'SET_AUTH_REDIRECT_PATH';","import React, {Component} from 'react';\n\nimport classes from './Render.css';\n\nwindow.Module = {};\nwindow.wasmBinary = null;\n\nclass Render extends Component {\n\n    state = {\n        isVisible: true,\n    }\n\n    canvas = null;\n\n    componentDidMount() {\n        window.wasmLoader.instantiateWasm(this.canvas);\n    }\n\n    render() {\n\n        const canvasClasses = [classes.Canvas];\n        if (this.props.visible!==true) {\n            canvasClasses.push(classes.Hidden);\n        }\n\n        return (\n            <canvas ref={e => this.canvas=e } className={canvasClasses.join(' ')}>\n            </canvas>\n        );\n    }\n}\n\nexport default Render;","import io from 'socket.io-client';\n\nconst socketClientHandlerFactory = () => {\n\n    const socketMessageHandler = (message) => {\n        const parsedMessage = JSON.parse(message);\n        console.log(\"FROM SOCKET \" , parsedMessage);\n        if (parsedMessage.msg==='/HouseBSData/create') {\n            //{“msg”:“/HouseBSData/create”,“name”:“5b7c8ad17ddedb00043f20f5\"}\n            console.log(\"NEW PROPERTY ADDED\");\n            // const propertyId = parsedMessage.name;\n            // store.dispatch(actionCreators.updateLastPropertyLoaded(propertyId));\n        }\n    }\n\n    return { \n        socket: null,\n        // store: store,\n        socketMessageHandler: socketMessageHandler,\n        onSocketEventCallback: null,\n        connect: (host) => {\n            window.SocketClientHandler.onSocketEventCallback = (event, data) => { window.Module.onSocketEventCallback(event, JSON.stringify(data)) };\n            window.SocketClientHandler.socket = io(host);\n            window.SocketClientHandler.socket.on(\"connect\", (socket) => {\n                window.SocketClientHandler.onSocketEventCallback(\"connect\", null); \n            });\n            window.SocketClientHandler.socket.on(\"message\", (message) => {\n                window.SocketClientHandler.socketMessageHandler(message);\n                window.SocketClientHandler.onSocketEventCallback(\"message\", message);                                                \n            });\n            window.SocketClientHandler.socket.on(\"disconnect\", (reason) => {\n                window.SocketClientHandler.onSocketEventCallback(\"disconnect\", { reason: reason});                            \n            });\n            window.SocketClientHandler.socket.on(\"error\", (error) => {\n                window.SocketClientHandler.onSocketEventCallback(\"error\", error);                            \n            });\n        },\n        send: (data) => {\n            if (window.SocketClientHandler.socket!==null) {\n                const jsonData = JSON.parse(data);\n    \n                window.SocketClientHandler.socket.emit(\"message\", jsonData);\n            }\n        }\n    }\n    \n}\n\nexport default socketClientHandlerFactory;\n","import React, { Component } from 'react';\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport * as actions from './store/actions/index';\n\nimport Render from './components/render/Render';\nimport classes from './App.css';\n\nimport socketClientHandlerFactory from './extra/socketClientHandlerFactory';\n\nwindow.SocketClientHandler = socketClientHandlerFactory();\n\nclass App extends Component {\n\n  onClickHandler = () => {\n    alert(\"CLICK\");\n  }\n\n  componentDidMount() {\n    this.props.onCheckCurrentUser();\n  }\n\n\n  render() {\n    return (\n      <div className={classes.App}>\n        <Render/>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token != null\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onCheckCurrentUser: () => dispatch(actions.checkCurrentUser())\n  }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const updateObject = (currentObject, updatedObject) => {\n    return {\n        ...currentObject,\n        ...updatedObject\n    }\n}","import * as actionTypes from '../actions/actionsTypes';\nimport { updateObject} from '../utility';\n\nconst initialState = {\n    error: null,\n    loading: false,\n    isGuest: false,\n    user: null\n}\n\nconst authStart = (state,action) => {\n    return updateObject(\n        state, {\n            error: null,\n            loading: true\n        });\n}\n\nconst authSuccess = (state,action) => {\n    return updateObject(\n        state, {\n            error: null,\n            loading: false,\n            isGuest: action.isGuest,\n            user: action.user            \n        });\n}\n\nconst authFail = (state,action) => {\n    return updateObject(\n        state, {\n            error: action.error,\n            loading: false\n        });   \n}\n\nconst authLogout = (state,action) => {\n    return updateObject(\n        state, {\n            isGuest: false,\n            user: null\n        }\n    )\n}\n\n\nconst reducer = (state=initialState, action) => {\n\n    switch (action.type) {\n        case actionTypes.AUTH_START: return authStart(state,action);\n        case actionTypes.AUTH_SUCCESS: return authSuccess(state,action);\n        case actionTypes.AUTH_FAIL: return authFail(state,action);\n        case actionTypes.AUTH_LOGOUT: return authLogout(state,action);\n        default: return state;\n    }\n}\n\nexport default reducer;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter} from 'react-router-dom';\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\n\nimport wasmLoader from './extra/wasmLoader';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport authReducer from './store/reducers/auth';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst rootReducers = combineReducers({\n    auth: authReducer\n})\n\nconst store = createStore(rootReducers, composeEnhancers(applyMiddleware(thunk)));\n\nwindow.wasmLoader = new wasmLoader(store);\n\nconst app = (\n    <Provider store={store}>\n        <BrowserRouter>\n            <App/>\n        </BrowserRouter>\n    </Provider>\n)\n\nReactDOM.render(app, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}
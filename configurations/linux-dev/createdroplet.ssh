# Add circleci user to droplet

useradd -m -d /home/circleci -s /bin/bash circleci
mkdir /home/circleci/.ssh
touch /home/circleci/.ssh/authorized_keys

echo -e "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCvky7JhOLkvXocx6cqW+nDFXwOieG/NRyUdd5c+CvCRYg0pJNdarY96KHUShfbBtx8L4kSJ1gbsLVAhd3PdZQOvmvyorhia+vuaNrjsN84ZlwfM/KVOhZ0prY4/Sx/00V1AfuASczl7/bkH75rEmBTLvqB1BBjsOE8Ql5S12yPcBLXDjiJJEw5gqo5WQdNU0bOomC62en8Xw9WbfV1PZXlZFOLQ3q52CGAZvy5okH7Cm2sPhhc7EOuefAFs5J9/hnv/uAPKpuzyU3quswKbUCMyEJLy4l5XSjKhGAETJcM4904i4nwGDdkOukIfk/pI9rsNDQ3aF3eRS+fZNM2TNlp Dado@Bes-iMac.home" | tee /home/circleci/.ssh/authorized_keys

# This is just in case we need to install npm and node, but since we are using dockerized node.js apps we do not need them
#sudo apt install -y npm
#sudo apt-get -y install nodejs
#curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.11/install.sh | bash
#export NVM_DIR="$HOME/.nvm"
#[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
#[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
#nvm install 10.13.0

sudo apt-get -y install nginx
sudo ufw allow 'Nginx HTTPS'

sudo apt-get install bc
sudo git clone https://github.com/letsencrypt/letsencrypt /opt/letsencrypt
cd /opt/letsencrypt
./certbot-auto certonly --standalone

crontab -e
00 1 * * 1 /opt/letsencrypt/certbot-auto renew >> /var/log/letsencrypt-renewal.log
30 1 * * 1 /bin/systemctl reload nginx


vim /etc/nginx/sites-enabled/default
Inside, delete everything and add the following:

# HTTP — redirect all traffic to HTTPS
server {
    listen 80;
    listen [::]:80 default_server ipv6only=on;
    return 301 https://$host$request_uri;
}

openssl dhparam -out /etc/ssl/certs/dhparam.pem 2048

vim /etc/nginx/snippets/ssl-params.conf
# See https://cipherli.st/ for details on this configuration
ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
ssl_prefer_server_ciphers on;
ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
ssl_ecdh_curve secp384r1; # Requires nginx >= 1.1.0
ssl_session_cache shared:SSL:10m;
ssl_session_tickets off; # Requires nginx >= 1.5.9
ssl_stapling on; # Requires nginx >= 1.3.7
ssl_stapling_verify on; # Requires nginx => 1.3.7
resolver 8.8.8.8 8.8.4.4 valid=300s;
resolver_timeout 5s;
add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload";
add_header X-Frame-Options DENY;
add_header X-Content-Type-Options nosniff;

# Add our strong Diffie-Hellman group
ssl_dhparam /etc/ssl/certs/dhparam.pem;

vim /etc/nginx/sites-enabled/default

# HTTPS — proxy all requests to the Node app
server {
    # Enable HTTP/2
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name app.example.com;

    # Use the Let’s Encrypt certificates
    ssl_certificate /etc/letsencrypt/live/app.example.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/app.example.com/privkey.pem;

    # Include the SSL configuration from cipherli.st
    include snippets/ssl-params.conf;

    location / {
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-NginX-Proxy true;
        proxy_pass http://localhost:5000/;
        proxy_ssl_session_reuse off;
        proxy_set_header Host $http_host;
        proxy_cache_bypass $http_upgrade;
        proxy_redirect off;
    }
}

systemctl start nginx

# Now add the id_rsa_circleci private key to CircleCI, need to find a way to automate it!!

